import io
from _typeshed import Incomplete

BLKSIZE: int
HEADER_VALUE_RE: Incomplete
log: Incomplete

class FileWrapper:
    filelike: Incomplete
    blksize: Incomplete
    close: Incomplete
    def __init__(self, filelike, blksize: int = 8192) -> None: ...
    def __getitem__(self, key): ...

class WSGIErrorsWrapper(io.RawIOBase):
    streams: Incomplete
    def __init__(self, cfg) -> None: ...
    def write(self, data) -> None: ...

def base_environ(cfg): ...
def default_environ(req, sock, cfg): ...
def proxy_environ(req): ...
def create(req, sock, client, server, cfg): ...

class Response:
    req: Incomplete
    sock: Incomplete
    version: Incomplete
    status: Incomplete
    chunked: bool
    must_close: bool
    headers: Incomplete
    headers_sent: bool
    response_length: Incomplete
    sent: int
    upgrade: bool
    cfg: Incomplete
    def __init__(self, req, sock, cfg) -> None: ...
    def force_close(self) -> None: ...
    def should_close(self): ...
    status_code: Incomplete
    def start_response(self, status, headers, exc_info=None): ...
    def process_headers(self, headers) -> None: ...
    def is_chunked(self): ...
    def default_headers(self): ...
    def send_headers(self) -> None: ...
    def write(self, arg) -> None: ...
    def can_sendfile(self): ...
    def sendfile(self, respiter): ...
    def write_file(self, respiter) -> None: ...
    def close(self) -> None: ...
