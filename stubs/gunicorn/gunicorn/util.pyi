from _typeshed import Incomplete

REDIRECT_TO: Incomplete
hop_headers: Incomplete

def load_entry_point(distribution, group, name): ...
def load_class(uri, default: str = "gunicorn.workers.sync.SyncWorker", section: str = "gunicorn.workers"): ...

positionals: Incomplete

def get_arity(f): ...
def get_username(uid): ...
def set_owner_process(uid, gid, initgroups: bool = False) -> None: ...
def chown(path, uid, gid) -> None: ...
def unlink(filename) -> None: ...
def is_ipv6(addr): ...
def parse_address(netloc, default_port: str = "8000"): ...
def close_on_exec(fd) -> None: ...
def set_non_blocking(fd) -> None: ...
def close(sock) -> None: ...
def write_chunk(sock, data) -> None: ...
def write(sock, data, chunked: bool = False): ...
def write_nonblock(sock, data, chunked: bool = False): ...
def write_error(sock, status_int, reason, mesg) -> None: ...
def import_app(module): ...
def getcwd(): ...
def http_date(timestamp=None): ...
def is_hoppish(header): ...
def daemonize(enable_stdio_inheritance: bool = False) -> None: ...
def seed() -> None: ...
def check_is_writable(path) -> None: ...
def to_bytestring(value, encoding: str = "utf8"): ...
def has_fileno(obj): ...
def warn(msg) -> None: ...
def make_fail_app(msg): ...
def split_request_uri(uri): ...
def reraise(tp, value, tb=None) -> None: ...
def bytes_to_str(b): ...
def unquote_to_wsgi_str(string): ...
